# Generated by Django 5.1.7 on 2025-05-04 01:46

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PlayerLatestSummary',
            fields=[
                ('player_id', models.IntegerField(primary_key=True, serialize=False)),
                ('player_name', models.CharField(max_length=50)),
                ('player_furigana', models.CharField(blank=True, max_length=50, null=True)),
                ('player_nickname', models.CharField(blank=True, max_length=50, null=True)),
                ('player_birthday', models.DateField(blank=True, null=True)),
                ('player_height', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('player_weight', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('player_is_married', models.BooleanField(blank=True, null=True)),
                ('player_partner', models.CharField(blank=True, max_length=50, null=True)),
                ('player_hobby', models.CharField(blank=True, max_length=50, null=True)),
                ('player_specialty', models.CharField(blank=True, max_length=50, null=True)),
                ('player_wikipedia_parameter', models.CharField(blank=True, max_length=250, null=True)),
                ('player_usukoi_parameter', models.IntegerField(blank=True, null=True)),
                ('player_youtube_parameter', models.CharField(blank=True, max_length=250, null=True)),
                ('player_remarks', models.CharField(blank=True, max_length=250, null=True)),
                ('place_id', models.IntegerField()),
                ('place_name', models.CharField(max_length=10)),
                ('throwing_id', models.IntegerField()),
                ('throwing_name', models.CharField(max_length=10)),
                ('batting_id', models.IntegerField()),
                ('batting_name', models.CharField(max_length=10)),
                ('position_category_id', models.IntegerField()),
                ('position_category_name', models.CharField(max_length=50)),
                ('position_order', models.IntegerField(default=0)),
                ('player_career_remarks', models.CharField(blank=True, max_length=50, null=True)),
                ('career_version_id', models.IntegerField()),
                ('career_version_name', models.CharField(max_length=50)),
                ('career_id', models.IntegerField()),
                ('career_category_id', models.IntegerField()),
                ('career_category_label', models.CharField(max_length=10)),
                ('player_draft_rank', models.IntegerField()),
                ('player_draft_miss_count', models.IntegerField()),
                ('draft_year', models.IntegerField()),
                ('draft_category_name', models.CharField(max_length=50)),
                ('common_record_year', models.IntegerField()),
                ('common_record_number', models.CharField(blank=True, max_length=5, null=True)),
                ('common_record_registered_name', models.CharField(blank=True, max_length=50, null=True)),
                ('common_record_salary', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('currency_name', models.CharField(max_length=30)),
                ('team_id', models.IntegerField()),
                ('team_name', models.CharField(max_length=50)),
                ('team_logo', models.ImageField(blank=True, null=True, upload_to='team_logos/')),
                ('team_order', models.IntegerField(default=0)),
                ('team_color', models.CharField(blank=True, max_length=50, null=True)),
                ('league_order', models.IntegerField()),
                ('organization_order', models.IntegerField()),
                ('pitching_year', models.IntegerField()),
                ('pitching_games', models.IntegerField(blank=True, null=True)),
                ('pitching_wins', models.IntegerField(blank=True, null=True)),
                ('pitching_loses', models.IntegerField(blank=True, null=True)),
                ('pitching_saves', models.IntegerField(blank=True, null=True)),
                ('pitching_holds', models.IntegerField(blank=True, null=True)),
                ('pitching_strike_outs', models.IntegerField(blank=True, null=True)),
                ('pitching_earned_run_average', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('batting_year', models.IntegerField()),
                ('batting_plate_appearances', models.IntegerField(blank=True, null=True)),
                ('batting_home_runs', models.IntegerField(blank=True, null=True)),
                ('batting_runs_batted_in', models.IntegerField(blank=True, null=True)),
                ('batting_stolen_bases', models.IntegerField(blank=True, null=True)),
                ('batting_average', models.DecimalField(blank=True, decimal_places=3, max_digits=4, null=True)),
            ],
            options={
                'db_table': 'player_latest_summary',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CareerCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
                ('label', models.CharField(blank=True, max_length=10, null=True)),
                ('sort_order', models.IntegerField()),
            ],
            options={
                'db_table': 'career_categories',
            },
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(max_length=30)),
                ('symbol', models.CharField(default='', max_length=10)),
            ],
            options={
                'db_table': 'currencies',
            },
        ),
        migrations.CreateModel(
            name='DraftCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('sort_order', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'draft_categories',
            },
        ),
        migrations.CreateModel(
            name='HandBatting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'hands_batting',
            },
        ),
        migrations.CreateModel(
            name='HandThrowing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'hands_throwing',
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'organizations',
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('sort_order', models.IntegerField(default=0)),
                ('is_foreign', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'places',
            },
        ),
        migrations.CreateModel(
            name='PositionCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('sort_order', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'position_categories',
            },
        ),
        migrations.CreateModel(
            name='Title',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('sort_order', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'titles',
            },
        ),
        migrations.CreateModel(
            name='Career',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('is_private', models.BooleanField(null=True)),
                ('wikipedia_parameter1', models.CharField(blank=True, max_length=500, null=True)),
                ('wikipedia_parameter2', models.CharField(blank=True, max_length=500, null=True)),
                ('career_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='players.careercategory')),
                ('place', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='players.place')),
            ],
            options={
                'db_table': 'careers',
            },
        ),
        migrations.CreateModel(
            name='CareerVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('version', models.IntegerField(default=0)),
                ('career', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='players.career')),
            ],
            options={
                'db_table': 'career_versions',
            },
        ),
        migrations.CreateModel(
            name='Draft',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('draft_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='players.draftcategory')),
            ],
            options={
                'db_table': 'drafts',
            },
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
                ('sort_order', models.IntegerField(default=0)),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='players.organization')),
            ],
            options={
                'db_table': 'leagues',
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='氏名')),
                ('furigana', models.CharField(blank=True, max_length=50, null=True, verbose_name='ふりがな')),
                ('nickname', models.CharField(blank=True, max_length=50, null=True, verbose_name='通称')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='誕生日')),
                ('height', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='身長')),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='体重')),
                ('is_married', models.BooleanField(blank=True, null=True, verbose_name='結婚')),
                ('partner', models.CharField(blank=True, max_length=50, null=True, verbose_name='結婚相手')),
                ('hobby', models.CharField(blank=True, max_length=50, null=True, verbose_name='趣味')),
                ('specialty', models.CharField(blank=True, max_length=50, null=True, verbose_name='特技')),
                ('wikipedia_parameter', models.CharField(blank=True, max_length=250, null=True, verbose_name='Wikipedia')),
                ('usukoi_parameter', models.IntegerField(blank=True, null=True, verbose_name='日本プロ野球記録')),
                ('youtube_parameter', models.CharField(blank=True, max_length=250, null=True, verbose_name='YouTube')),
                ('remarks', models.CharField(blank=True, max_length=250, null=True, verbose_name='備考')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('batting_hand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='players.handbatting', verbose_name='利腕')),
                ('place', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='players.place', verbose_name='出身地')),
                ('throwing_hand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='players.handthrowing', verbose_name='利腕')),
                ('main_position_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='players.positioncategory', verbose_name='ポジション')),
            ],
            options={
                'db_table': 'players',
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('sort_order', models.IntegerField(default=0)),
                ('position_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='players.positioncategory')),
            ],
            options={
                'db_table': 'positions',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='team_logos/')),
                ('sort_order', models.IntegerField(default=0)),
                ('color', models.CharField(blank=True, max_length=50, null=True)),
                ('is_select', models.BooleanField(null=True)),
                ('usukoi_parameter', models.CharField(blank=True, max_length=50, null=True, verbose_name='日本プロ野球記録')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='players.league')),
            ],
            options={
                'db_table': 'teams',
                'ordering': ['league', 'sort_order'],
            },
        ),
        migrations.CreateModel(
            name='PlayerDraft',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.IntegerField()),
                ('is_reverse_nomination', models.BooleanField(blank=True, null=True)),
                ('is_hit', models.BooleanField(blank=True, null=True)),
                ('miss_count', models.IntegerField()),
                ('is_joined', models.BooleanField(blank=True, null=True)),
                ('draft', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='players.draft')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='players.player')),
                ('position_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='players.positioncategory')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='players.team')),
            ],
            options={
                'db_table': 'player_drafts',
            },
        ),
        migrations.CreateModel(
            name='PlayerCommonRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('number', models.CharField(blank=True, max_length=5, null=True)),
                ('registered_name', models.CharField(blank=True, max_length=50, null=True)),
                ('salary', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='players.currency')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='players.player')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='players.team')),
            ],
            options={
                'db_table': 'player_common_records',
                'ordering': ['year'],
            },
        ),
        migrations.AddField(
            model_name='player',
            name='favorite_team',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='players.team', verbose_name='ファン球団'),
        ),
        migrations.CreateModel(
            name='PlayerTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='players.player')),
                ('position', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='players.position')),
                ('title', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='players.title')),
            ],
            options={
                'db_table': 'player_titles',
            },
        ),
        migrations.CreateModel(
            name='ExchangeRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('rate', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='players.currency')),
            ],
            options={
                'db_table': 'exchange_rates',
                'unique_together': {('year', 'currency')},
            },
        ),
        migrations.CreateModel(
            name='PlayerBattingRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('games', models.IntegerField(blank=True, null=True)),
                ('plate_appearances', models.IntegerField(blank=True, null=True)),
                ('at_bats', models.IntegerField(blank=True, null=True)),
                ('runs', models.IntegerField(blank=True, null=True)),
                ('hits', models.IntegerField(blank=True, null=True)),
                ('doubles', models.IntegerField(blank=True, null=True)),
                ('triples', models.IntegerField(blank=True, null=True)),
                ('home_runs', models.IntegerField(blank=True, null=True)),
                ('total_bases', models.IntegerField(blank=True, null=True)),
                ('runs_batted_in', models.IntegerField(blank=True, null=True)),
                ('stolen_bases', models.IntegerField(blank=True, null=True)),
                ('caught_stealing', models.IntegerField(blank=True, null=True)),
                ('sacrifice_bunts', models.IntegerField(blank=True, null=True)),
                ('sacrifice_flys', models.IntegerField(blank=True, null=True)),
                ('bases_on_balls', models.IntegerField(blank=True, null=True)),
                ('intentional_walks', models.IntegerField(blank=True, null=True)),
                ('hit_by_pitch', models.IntegerField(blank=True, null=True)),
                ('strike_outs', models.IntegerField(blank=True, null=True)),
                ('grounded_into_double_plays', models.IntegerField(blank=True, null=True)),
                ('interferences', models.IntegerField(blank=True, null=True)),
                ('batting_average', models.DecimalField(blank=True, decimal_places=3, max_digits=4, null=True)),
                ('on_base_percentage', models.DecimalField(blank=True, decimal_places=3, max_digits=4, null=True)),
                ('slugging_percentage', models.DecimalField(blank=True, decimal_places=3, max_digits=4, null=True)),
                ('ops', models.DecimalField(blank=True, decimal_places=3, max_digits=4, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='players.player')),
            ],
            options={
                'db_table': 'player_batting_records',
                'unique_together': {('player', 'year')},
            },
        ),
        migrations.CreateModel(
            name='PlayerCareer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.IntegerField()),
                ('remarks', models.CharField(blank=True, max_length=50, null=True)),
                ('career_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='players.careerversion')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='players.player')),
            ],
            options={
                'db_table': 'player_careers',
                'indexes': [models.Index(fields=['player', 'sort_order'], name='player_care_player__da7901_idx')],
            },
        ),
        migrations.CreateModel(
            name='PlayerPitchingRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('games', models.IntegerField(blank=True, null=True)),
                ('games_started', models.IntegerField(blank=True, null=True)),
                ('games_finished', models.IntegerField(blank=True, null=True)),
                ('complete_games', models.IntegerField(blank=True, null=True)),
                ('shutouts', models.IntegerField(blank=True, null=True)),
                ('no_base_on_balls_games', models.IntegerField(blank=True, null=True)),
                ('wins', models.IntegerField(blank=True, null=True)),
                ('loses', models.IntegerField(blank=True, null=True)),
                ('saves', models.IntegerField(blank=True, null=True)),
                ('holds', models.IntegerField(blank=True, null=True)),
                ('innings_pitched', models.DecimalField(blank=True, decimal_places=1, max_digits=10, null=True)),
                ('plate_appearances', models.IntegerField(blank=True, null=True)),
                ('at_bats', models.IntegerField(blank=True, null=True)),
                ('hits', models.IntegerField(blank=True, null=True)),
                ('home_runs', models.IntegerField(blank=True, null=True)),
                ('walks', models.IntegerField(blank=True, null=True)),
                ('hit_batsmen', models.IntegerField(blank=True, null=True)),
                ('strike_outs', models.IntegerField(blank=True, null=True)),
                ('wild_pitches', models.IntegerField(blank=True, null=True)),
                ('balk', models.IntegerField(blank=True, null=True)),
                ('runs', models.IntegerField(blank=True, null=True)),
                ('earned_runs', models.IntegerField(blank=True, null=True)),
                ('earned_run_average', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('whip', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='players.player')),
            ],
            options={
                'db_table': 'player_pitching_records',
                'unique_together': {('player', 'year')},
            },
        ),
        migrations.CreateModel(
            name='PlayerFieldingRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('games', models.IntegerField(blank=True, null=True)),
                ('put_outs', models.IntegerField(blank=True, null=True)),
                ('assists', models.IntegerField(blank=True, null=True)),
                ('errors', models.IntegerField(blank=True, null=True)),
                ('double_plays', models.IntegerField(blank=True, null=True)),
                ('fielding_percentage', models.DecimalField(blank=True, decimal_places=3, max_digits=4, null=True)),
                ('passed_balls', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='players.player')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='players.position')),
            ],
            options={
                'db_table': 'player_fielding_records',
                'unique_together': {('player', 'year', 'position')},
            },
        ),
        migrations.AddIndex(
            model_name='team',
            index=models.Index(fields=['league'], name='teams_league__adc265_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='playercommonrecord',
            unique_together={('player', 'year')},
        ),
    ]
